@startuml
title TN Object Creation
' FPA : Farmer Prefix Allocator
database FPA
' TNoDB: TN Object TNoDB
database TNoDB
' NRRH : Network Resource Request
box Network Module
participant NRRH
' node : 0-OS
entity node
' jlkj
control watcher
endbox

== Request network Resource ==
alt #yellow TNo doesn't exist
NRRH -> TNoDB : request networe\nresource
TNoDB -> FPA : request prefix\nallocation
TNoDB -> FPA : request Exit setup
FPA --> TNoDB : here you go
TNoDB -->TNoDB :new TN object\n(New Network\n+ExitPoint)
TNoDB --> NRRH : TN object
TNoDB --> NRRH : Exit Setup
== Applying TN == 
NRRH -> node : TNo
NRRH -> node : Exit Setup
node <- node : apply NR of TNo
node <- node : apply Exit Setup 
else #gray TNo exists, just new NR
NRRH -> TNoDB : request network\nresource
TNoDB -> FPA : request prefix\nallocation
FPA --> TNoDB : here you go
TNoDB->TNoDB :update TN object\n(Add new NR)
TNoDB --> NRRH : TN object
== Applying TN == 
NRRH -> node : TNo
node <- node : apply NR of TNo

end
== TN updates ==
watcher -> TNoDB : TN new version?
watcher <-- TNoDB : TNo
watcher -> node : apply NR of TNo


legend
|=abbrev  | definition   |
|TN:      | Tenant Network|
|NR:       | Network Resource |
|TNo:     | Tenant Network Object |
|FPA:     | Farmer Prefix allocator|
|TNoDB:   | distributed TNoDB space to keep Tenant Network Objects|
|NRRH:     | Network Resource Request Handler (incoming request)|
|watcher: | request new versions of Tenant Network Objects|

Note: the Exit and NR Setup are separate, as an ExitPoint 
is an NR in it's full right. So an ExitPoint gets configured in 2 
stages.
Only the preparation of the WG interface is done differently.
endlegend
@enduml