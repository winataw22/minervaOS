name: Runtime packages
on: 
  push:
    # Matching on any tags which is a production release versioning
    # Matching:
    #  - v1.0.0
    #  - v1.1.0
    #  - v2.1.13
    #
    # Ignoring:
    #  - v1.0.0-beta5
    #  - v1.0.1-rc3
    #  - v2.1.4-hotfix-87
    tags:
      - 'v*'
      - '!v*-*'

jobs:
  containerd:
    name: 'Package: containerd'
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Checkout code into the Go module directory
      uses: actions/checkout@v1

    - name: Setup basesystem
      run: |
        cd bins
        sudo ./bins-extra.sh --package basesystem

    - name: Build package
      id: package
      run: |
        cd bins
        sudo ./bins-extra.sh --package containerd

    - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.HUB_JWT }}
        action: publish
        user: tf-autobuilder
        root: bins/releases/containerd
        name: ${{ steps.package.outputs.name }}.flist

    - name: crosslink flist (tf-zos-bins)
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.hub_jwt }}
        action: crosslink
        user: tf-zos-bins
        name: containerd.flist
        target: tf-autobuilder/${{ steps.package.outputs.name }}.flist


  firecracker:
    name: 'Package: firecracker'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup basesystem
      run: |
        cd bins
        sudo ./bins-extra.sh --package basesystem

    - name: Build package
      id: package
      run: |
        cd bins
        sudo ./bins-extra.sh --package firecracker

    - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.HUB_JWT }}
        action: publish
        user: tf-autobuilder
        root: bins/releases/firecracker
        name: ${{ steps.package.outputs.name }}.flist

    - name: crosslink flist (tf-zos-bins)
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.hub_jwt }}
        action: crosslink
        user: tf-zos-bins
        name: firecracker.flist
        target: tf-autobuilder/${{ steps.package.outputs.name }}.flist


  promtail:
    name: 'Package: promtail'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup basesystem
      run: |
        cd bins
        sudo ./bins-extra.sh --package basesystem

    - name: Build package
      id: package
      run: |
        cd bins
        sudo ./bins-extra.sh --package promtail

    - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.HUB_JWT }}
        action: publish
        user: tf-autobuilder
        root: bins/releases/promtail
        name: ${{ steps.package.outputs.name }}.flist

    - name: crosslink flist (tf-zos-bins)
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.hub_jwt }}
        action: crosslink
        user: tf-zos-bins
        name: promtail.flist
        target: tf-autobuilder/${{ steps.package.outputs.name }}.flist


  virtwhat:
    name: 'Package: virtwhat'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup basesystem
      run: |
        cd bins
        sudo ./bins-extra.sh --package basesystem

    - name: Build package
      id: package
      run: |
        cd bins
        sudo ./bins-extra.sh --package virtwhat

    - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.HUB_JWT }}
        action: publish
        user: tf-autobuilder
        root: bins/releases/virtwhat
        name: ${{ steps.package.outputs.name }}.flist

    - name: crosslink flist (tf-zos-bins)
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.hub_jwt }}
        action: crosslink
        user: tf-zos-bins
        name: virtwhat.flist
        target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  logtrunc:
    name: 'Package: logtrunc'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup basesystem
      run: |
        cd bins
        sudo ./bins-extra.sh --package basesystem

    - name: Build package
      id: package
      run: |
        cd bins
        sudo ./bins-extra.sh --package logtrunc

    - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.HUB_JWT }}
        action: publish
        user: tf-autobuilder
        root: bins/releases/logtrunc
        name: ${{ steps.package.outputs.name }}.flist

    - name: crosslink flist (tf-zos-bins)
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.hub_jwt }}
        action: crosslink
        user: tf-zos-bins
        name: logtrunc.flist
        target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  shim-logs:
    name: 'Package: shim-logs'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup basesystem
      run: |
        cd bins
        sudo ./bins-extra.sh --package basesystem

    - name: Build package
      id: package
      run: |
        cd bins
        sudo ./bins-extra.sh --package shimlogs

    - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.HUB_JWT }}
        action: publish
        user: tf-autobuilder
        root: bins/releases/shimlogs
        name: ${{ steps.package.outputs.name }}.flist

    - name: crosslink flist (tf-zos-bins)
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.hub_jwt }}
        action: crosslink
        user: tf-zos-bins
        name: shim-logs.flist
        target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

  yggdrasil:
    name: 'Package: yggdrasil'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup basesystem
      run: |
        cd bins
        sudo ./bins-extra.sh --package basesystem

    - name: Build package
      id: package
      run: |
        cd bins
        sudo ./bins-extra.sh --package yggdrasil

    - name: Publish flist (tf-autobuilder, ${{ steps.package.outputs.name }})
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.HUB_JWT }}
        action: publish
        user: tf-autobuilder
        root: bins/releases/yggdrasil
        name: ${{ steps.package.outputs.name }}.flist

    - name: crosslink flist (tf-zos-bins)
      if: success()
      uses: threefoldtech/publish-flist@master
      with:
        token: ${{ secrets.hub_jwt }}
        action: crosslink
        user: tf-zos-bins
        name: yggdrasil.flist
        target: tf-autobuilder/${{ steps.package.outputs.name }}.flist

        